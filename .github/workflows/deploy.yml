name: Deploy
on:
  push:
    branches:
      - main
      - develop
  workflow_call:
    inputs:
      # environment:
      #   description: Environment to Deploy
      #   required: true
      #   type: string

      image_version:
        description: Docker Image Version
        required: true
        type: string


  workflow_dispatch:
    inputs:
      # environment:
      #   description: Environment to Deploy
      #   required: true
      #   type: choice
      #   options:
      #     - prod

      image_version:
        description: Docker Image Version
        required: true
        type: string


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # GITHUB_TOKEN: ${{ secrets.MY_GITHUB_PAT }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo "TARGET_ENV=${{ github.ref }}" >> $GITHUB_ENV

      - name: Request approval to deploy to Prod
        if: github.ref == 'refs/heads/main'
        uses: "peter-evans/workflow-dispatch@v1"
        with:
          workflow: deploy.yml
          ref: main

      - name: Set up Kubeconfig for Prod
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Set up Kubeconfig for DEV
        if: github.ref == 'refs/heads/develop'
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DEV }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # - name: Install Helm
      #   run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # - name: Helm Login
      #   run: echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.REGISTRY }} -u a-savinski  --password-stdin

      - name: Set up Variables
        run: |
          export SHA=$(echo $(($RANDOM%(9999999-1000000+1)+1000000)))
          # echo "VERSION=$(echo ${{ inputs.image_version }}-$SHA)" >> $GITHUB_ENV
          export REPO=$(echo ${IMAGE_NAME,,})
          echo "REPO_NAME=$(echo $REPO | awk -F'/' '{print $1}')" >> $GITHUB_ENV
          echo "SERVICE_NAME=$(echo $REPO | awk -F'/' '{print $NF}' | cut -d'-' -f2)" >> $GITHUB_ENV
      
      - name: Helm Upgrade Prod
        if: github.ref == 'refs/heads/main'
        run: echo "This is prod"
      
      - name: Helm Upgrade Dev
        if: github.ref == 'refs/heads/develop'
        run: echo "This is dev environment"

      # - name: Chart Packaging
      #   run: helm package ./chart/ --version ${{ env.VERSION }}

      # - name: Push Helm Package
      #   run: helm push *-${{ env.VERSION }}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO_NAME }}/helm

      # after ci pipeline the container registry need some time to show container images
      # - name: Wait for 30 seconds
      #   run: sleep 30

      # - name: Helm Upgrade
      #   run: helm upgrade --install --namespace ${{ inputs.environment }} --set image.tag=${{ inputs.image_version }} --version ${{ env.VERSION }} ${{ env.SERVICE_NAME }} oci://${{ env.REGISTRY }}/${{ env.REPO_NAME }}/helm/${{ env.SERVICE_NAME }}

      - name: Deploy Results
        run: |
          echo Deployed Docker Image: ${{ inputs.image_version }}
          echo Helm Chart: ${{ env.VERSION }}
